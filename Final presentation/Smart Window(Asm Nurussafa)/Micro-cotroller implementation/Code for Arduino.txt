#include <Servo.h>
#include <LiquidCrystal.h>
#define Extreme_weather_trigger 3
#define Moderate_weather_trigger 2
 
 
LiquidCrystal lcd(12, 11, 5, 4, 10, 8);

Servo servo_9;

enum current_weather{moderateWeather, extremeWeather,idle};
    current_weather currentWeather= idle;

void Extreme_weather()
{	
  	
  	
		lcd.clear();
  		lcd.setCursor(1, 0); 
  		lcd.print("EXTREME WEATHER");
  	
  		delay(3000);
  
  		lcd.clear();
  		lcd.setCursor(1, 0); 
  		lcd.print("AC ON");
    	lcd.setCursor(1, 1);
  		lcd.print("WINDOWS CLOSED");
  
    digitalWrite(13, HIGH);
  	
  	int pos = 0;
    for (pos = 180; pos >= 0; pos -= 1) {
      
      servo_9.write(pos);
      
      delay(15);
  	}
  	  	
  		
  	setup();	

  	
}

void Moderate_weather()
{	
  	lcd.clear();
  	lcd.setCursor(1, 0); 
  	lcd.print("MODERATE WEATHER");
  	
  	delay(3000);
  
  	lcd.clear();
  	lcd.setCursor(1, 0); 
  	lcd.print("AC OFF");
    lcd.setCursor(1, 1);
  	lcd.print("WINDOWS OPENED");
    digitalWrite(13, LOW);
  	
  	int pos = 0;
    for (pos = 0; pos <= 180; pos += 1) {
      
      servo_9.write(pos);
      
      delay(15);
    }
  
  	
  	setup();
  	
  	
  
  	
  	

 }

void Idle ()
{ 
	
  	digitalWrite(8, LOW);
  	digitalWrite(12, LOW);
  	digitalWrite(13, LOW);
  	
  	
  	
  	
  	
}

int Weather_check()
    {

        if( digitalRead(Extreme_weather_trigger) == HIGH )
        {
            currentWeather=extremeWeather;

        }
        else if(digitalRead(Moderate_weather_trigger) == HIGH)
        {
            currentWeather=moderateWeather;

        }
        else
        {
            currentWeather=idle;
        }
        return currentWeather;

    }



void setup()
{
  Serial.begin(9600);
  pinMode(Extreme_weather_trigger, INPUT);
  
  pinMode(13, OUTPUT);
  servo_9.attach(9, 500, 2500);
  pinMode(Moderate_weather_trigger, INPUT);
  
  
  lcd.begin(16, 2);
  lcd.setCursor(1, 0);
    lcd.print("SMART WINDOW");
  
  	lcd.setCursor(1, 1);
  	lcd.print("IDLE");
  
  
  
}

void loop()
{	
  Weather_check();
  
    switch(currentWeather){
      
      case extremeWeather:
      	
      
      	Extreme_weather();
        
        
        
      
      
      	break;
      
      case moderateWeather:
      	
      	Moderate_weather();
          
        
        
      
      	break;
      case idle:
      	
      	Idle();
         
      	
      break;
    }
         
	
}